const { cmd } = require('../command');
const axios = require('axios');
const ytdl = require('ytdl-core');

cmd({
  pattern: 'yt',
  desc: 'Download YouTube video',
  category: 'downloader',
  filename: __filename,
  use: '.yt <youtube link>',
}, async (client, m, info) => {
  const text = info || m.text || ''; // Fix: Get text safely

  if (!text || !text.includes('youtu')) {
    return m.reply('‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∂ã‡∂Ø‡∑è: `.yt https://youtu.be/abc123`');
  }

  try {
    const videoInfo = await ytdl.getInfo(text);
    const title = videoInfo.videoDetails.title;
    const thumbnail = videoInfo.videoDetails.thumbnails.pop().url;
    const formats = ytdl.filterFormats(videoInfo.formats, 'videoandaudio');

    const format = formats.find(f => f.container === 'mp4' && f.hasAudio && f.hasVideo && f.qualityLabel === '360p') || formats[0];
    const fileSizeMB = format.contentLength ? (parseInt(format.contentLength) / 1048576).toFixed(2) : 'Unknown';

    if (parseFloat(fileSizeMB) > 150 && process.env.PLATFORM !== 'vps') {
      return m.reply(`‚ö†Ô∏è ‡∑Ä‡∑í‡∑Å‡∑è‡∂Ω ‡∂ú‡∑ú‡∂±‡∑î ‡∑Ä‡∑ö. ${fileSizeMB}MB. VPS ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í.`);
    }

    await client.sendMessage(m.chat, {
      image: { url: thumbnail },
      caption: `üì• *YouTube Download*\n\nüé¨ *Title:* ${title}\nüì¶ *Size:* ${fileSizeMB}MB\n\n‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂ë‡∑Ä‡∂∏‡∑í‡∂±‡∑ä...`,
    }, { quoted: m });

    await client.sendMessage(m.chat, {
      video: { url: format.url },
      caption: `üé¨ ${title}`,
    }, { quoted: m });

  } catch (err) {
    console.log(err);
    m.reply('‚ùå ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑î‡∂´‡∑è.');
  }
});
