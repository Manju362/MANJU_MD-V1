const axios = require("axios");
const { cmd } = require("../command.js");

cmd({
  pattern: "ytsearch",
  alias: ["yts"],
  desc: "YouTube ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏",
  category: "downloader",
  use: '.ytsearch <video name>',
  filename: __filename,
}, async (m, sock, { args, reply }) => {
  const query = args.join(" ");
  if (!query) {
    return reply(
      "‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑É‡∑ô‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö ‡∂±‡∂∏‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!\n\n" +
      "‡∂ã‡∂Ø‡∑è: `.ytsearch hiru news`"
    );
  }

  const apiKey = "GENUX-WXSU5DK";
  const apiUrl = `https://api.genux.me/api/search/yt-search?query=${encodeURIComponent(query)}&apikey=${apiKey}`;

  try {
    const res = await axios.get(apiUrl);

    // Check if response and data is valid
    if (!res || !res.data || !res.data.result || res.data.result.length === 0) {
      return reply("‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∂ß ‡∂ú‡∑ê‡∂Ω‡∂¥‡∑ô‡∂± ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∂ö‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è.");
    }

    const results = res.data.result.slice(0, 5); // First 5 results
    let text = `üîé *YouTube ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂µ‡∂Ω*\n\n`;

    results.forEach((video, index) => {
      text += `*${index + 1}. ${video.title}*\n`;
      text += `üì∫ ‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä: ${video.channel.name}\n`;
      text += `‚è±Ô∏è ‡∂Ø‡∑í‡∂ú: ${video.duration}\n`;
      text += `üîó https://youtu.be/${video.videoId}\n\n`;
    });

    reply(text);

  } catch (error) {
    console.error("YTSearch Error:", error.message);
    reply("‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í! ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑î‡∂´‡∑è. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑É‡∑î‡∑Ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
  }
});
