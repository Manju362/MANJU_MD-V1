const { ytdl } = require('@bochilteam/scraper');
const { default: axios } = require('axios');

module.exports = {
  name: 'youtube',
  alias: ['yt', 'ytmp4', 'ytvideo'],
  description: 'YouTube Video Downloader - MP4',
  category: 'downloader',
  use: '<youtube_url>',
  async execute(m, { conn, args }) {
    if (!args[0]) return m.reply('‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª YouTube ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±.');

    let yturl = args[0];
    if (!yturl.match(/^(https?:\/\/)?(www\.youtube\.com|youtu\.be)\//))
      return m.reply('‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î YouTube ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±.');

    m.reply('‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±‡∑èÏ§ë...');

    try {
      const data = await ytdl(yturl);
      const { title, thumbnail, video, author } = data;

      let qualities = Object.keys(video)
        .filter(q => video[q].hasOwnProperty('url'))
        .sort((a, b) => parseInt(b) - parseInt(a)); // high to low

      let buttons = qualities.slice(0, 5).map(q => ({
        buttonId: `.ytmp4dl ${video[q].url}`,
        buttonText: { displayText: `${q} (${(video[q].fileSize / 1024 / 1024).toFixed(1)}MB)` },
        type: 1,
      }));

      let caption = `*üìΩÔ∏è ‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è‡∑Ä:* ${title}\n*üë§ ‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä:* ${author.name}\n*üìä ‡∂ú‡∑î‡∂´‡∑è‡∂≠‡∑ä‡∂∏‡∂≠‡∑è‡∑Ä‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±:*\n\n_‡∂î‡∂∂‡∂ß ‡∂ú‡∑ê‡∂Ω‡∂¥‡∑ô‡∂± quality ‡∂ë‡∂ö ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±_`;

      await conn.sendMessage(m.chat, {
        image: { url: thumbnail },
        caption,
        footer: 'MANJU_MD YouTube Downloader',
        buttons,
        headerType: 4
      }, { quoted: m });

    } catch (e) {
      console.error(e);
      m.reply('‡∑Ä‡∑í‡∂©‡∑í‡∂∫‡∑ù ‡∂ë‡∂ö ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑ì ‡∂á‡∂≠. ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.');
    }
  }
};
